<?php

namespace Jepi\Fw\IO;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-11-07 at 22:07:25.
 */
class InputTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Input
     */
    protected $getInput;
    /**
     * @var Input
     */
    protected $postInput;

    private $xssInjection = "<script>window.alert('hello world');</script>";
    private $xssInjectionFiltered = "window.alert(&#39;hello world&#39;);";

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $_GET['prop1'] = 1;
        $_GET['prop2'] = 2;
        $_GET['prop3'] = 3;
        $_GET['xssInjection'] = $this->xssInjection;
        $_POST['attr1'] = 1;
        $_POST['attr2'] = 2;
        $_POST['attr3'] = 3;
        $_POST['xssInjection'] = $this->xssInjection;
        $this->getInput = new Input();
        $this->getInput->setup($_GET, false);
        $this->postInput = new Input();
        $this->postInput->setup($_POST, false);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        $_GET = array();
        $_POST = array();
    }

    /**
     * @covers Jepi\Fw\IO\Input::xssPreventFilter
     */
    public function testXssPreventFilter() {
        $filtered = $this->getInput->xssPreventFilter($this->xssInjection);

        $this->assertEquals($this->xssInjectionFiltered, $filtered);
    }

    /**
     * @covers Jepi\Fw\IO\Input::get
     */
    public function testGet() {
        $prop1 = $this->getInput->get('prop1');
        $prop2 = $this->getInput->get('prop2');
        $prop3 = $this->getInput->get('prop3');
        $xssInjection = $this->getInput->get('xssInjection', false);
        $xssInjectionFiltered = $this->getInput->get('xssInjection');
        $nonExisting = $this->getInput->get('testNoGetParam');

        $this->assertEquals(1,$prop1);
        $this->assertEquals(2,$prop2);
        $this->assertEquals(3,$prop3);
        $this->assertEquals($this->xssInjection,$xssInjection);
        $this->assertEquals($this->xssInjectionFiltered,$xssInjectionFiltered);
        $this->assertEquals(false, $nonExisting);
    }

    /**
     * @covers Jepi\Fw\IO\Input::get
     */
    public function testPost() {
        $prop1 = $this->postInput->get('attr1');
        $prop2 = $this->postInput->get('attr2');
        $prop3 = $this->postInput->get('attr3');
        $xssInjection = $this->postInput->get('xssInjection', false);
        $xssInjectionFiltered = $this->postInput->get('xssInjection');
        $nonExisting = $this->postInput->get('testNoGetParam');

        $this->assertEquals(1,$prop1);
        $this->assertEquals(2,$prop2);
        $this->assertEquals(3,$prop3);
        $this->assertEquals($this->xssInjection,$xssInjection);
        $this->assertEquals($this->xssInjectionFiltered,$xssInjectionFiltered);
        $this->assertEquals(false, $nonExisting);
    }

}
